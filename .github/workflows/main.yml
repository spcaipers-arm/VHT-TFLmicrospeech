# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Create Container runtime from DockerHub
        run : |
          docker run -i -v ${{ github.workspace }}:/workspace/host --mac-address="00:02:F7:FF:55:55" --name build_runtime -d armswdev/cmsis_tools_m55:latest 
          docker exec build_runtime pip3 install six requests pyyaml junit_xml pillow 

      # Runs a set of commands using the runners shell
      - name: Build on Docker
        run: |
          docker exec build_runtime cp_install.sh /workspace/host/Platform_FVP_Corstone_SSE-300_Ethos-U55/packlist
          docker exec  -w /workspace/host/Platform_FVP_Corstone_SSE-300_Ethos-U55 build_runtime cbuild.sh /workspace/host/Platform_FVP_Corstone_SSE-300_Ethos-U55/microspeech.Example.cprj
   
      - name: Prepare VHT Testsuite
        run: |
           cp ${{ github.workspace }}/Platform_FVP_Corstone_SSE-300_Ethos-U55/Objects/microspeech.axf ${{ github.workspace }}/vht/elf/

      # Run test suite in Arm VHT
      - uses: ARM-software/VHT-AMI@master
        with:
          vht_in: ${{ github.workspace }}/vht/
          instance_id: ${{ secrets.AWS_INSTANCE_ID }}
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key_id: ${{ secrets.AWS_SECRET_KEY }}
           
           
           
           
